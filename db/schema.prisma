// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

enum WaypointType {
  STEERPOINT
  BULLSEYE
}

model WaypointSet {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  waypoints Waypoint[]
}

model Waypoint {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  name               String
  waypointType       WaypointType        @default(STEERPOINT)
  coordinate         Coordinate          @relation(fields: [coordinateId], references: [id])
  coordinateId       Int
  WaypointSet        WaypointSet?        @relation(fields: [waypointSetId], references: [id])
  waypointSetId      Int?
  WaypointInputFlags WaypointInputFlag[]
}

enum ElevationUnit {
  FEET
  METERS
}

model Coordinate {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  latitude      Float
  longitude     Float
  elevation     Int
  elevationUnit ElevationUnit @default(FEET)
  Waypoint      Waypoint[]
}

model WaypointInputFlag {
  id          Int       @id @default(autoincrement())
  Waypoint    Waypoint  @relation(fields: [waypointId], references: [id])
  waypointId  Int
  InputFlag   InputFlag @relation(fields: [inputFlagId], references: [id])
  inputFlagId Int
}

model InputFlag {
  id                Int                 @id @default(autoincrement())
  name              String
  WaypointInputFlag WaypointInputFlag[]
}
